reduce
REDUCE 3.4, 15-Jul-91 ...

1: load!-module 'redten;
Reduce-tensor, Version v3.55, July 20, 1993

2: on demo;

3: in sch;


comment
This  Reduce  script  computes   the   Ricci   tensor   for   the
Schwarzschild  metric  to show that it is a vacuum solution. Also
computed is the Kretschmann scalar. 
;

coords '(t r th ph);


3: 

 % these are default but it is wise to set them anyway

comment
Below is the line-element in the usual form.
;

ds:=(1-2*m/r)*d(t)^2-d(r)^2/(1-2*m/r)-r^2*d(th)^2-r^2*sin(th)^2*d(ph)^2;


                  2        2    3        2        2  4       2  2
 ds := ( - 2 d(ph)  sin(th)  m r  + d(ph)  sin(th)  r  + d(r)  r

                 2  2         2           2  2          2    3
         - 4 d(t)  m  + 4 d(t)  m r - d(t)  r  - 2 d(th)  m r

                2  4
         + d(th)  r )/(r (2 m - r))

3: 


on time;


Time: 267 ms

3: 


comment
Compute the metric from the line-element, and then compute  the  Ricci
tensor.
;

metric(ds);

computing g1
invert finished.

 g1

Time: 400 ms

3: 


ricci();

computing g1_ric
  computing g1_R
    computing g1_c1
    christoffel1 finished.
    computing g1_c2
    christoffel2 finished.
  riemann finished.
** this metric is a vacuum solution.

 g1_ric

Time: 3667 ms

3: 


comment
Display the  Riemann  curvature  tensor  and  the  (empty)  Ricci
tensor.
;

R[];


              2 m
 R         = -----
  0 1 0 1      3
              r

              m (2 m - r)
 R         = -------------
  0 2 0 2          2
                  r

                     2
              sin(th)  m (2 m - r)
 R         = ----------------------
  0 3 0 3               2
                       r

                - m
 R         = ---------
  1 2 1 2     2 m - r

                        2
               - sin(th)  m
 R         = ---------------
  1 3 1 3        2 m - r

                         2
 R         =  - 2 sin(th)  m r
  2 3 2 3 


 g1_R

Time: 100 ms

3: 


ric[];



 g1_ric

Time: 0 ms

3: 


comment
Compute the Kretschmann scalar by fully contracting  the  Riemann
tensor.  An  @  symbol indicates that the attached index is to be
raised or lowered via a metric contraction. The resulting  object
is  stored  as  a  new  entity in the system, and attached to the
parent (g1_R_p seen in the directory below). 
The  gcd  flag  allows  Reduce  to  cancel  common  factors  from
numerator and denominator which are not internally identical. 
;

on gcd, factor;


Time: 16 ms

3: 


kr == R[a,b,c,d] * R[@a,@b,@c,@d];


       a b c d 
 kr = R         R
                 a b c d 

computing g1_R_p

shift finished.

      2
  48 m
 -------
    6
   r

Time: 1500 ms

3: 

off gcd, factor;


Time: 17 ms

3: 


dir();

  name          type          comp    prot  coordinates     indextype
  x             coordinates    4       w    (t r th ph)      (1)
* g1            metric         4       w    (t r th ph)      (-1 -1)
* g1_inv        metric         4       w    (t r th ph)      (1 1)
  g1_ric        ricci          0       w    (t r th ph)      (-1 -1)
  g1_R          riemann        6       w    (t r th ph)      (-1 -1 -1 -1)
  g1_c1         christoffel1   9       w    (t r th ph)      (-1 -1 -1)
  g1_c2         christoffel2   9       w    (t r th ph)      (1 -1 -1)
  g1_R_p        riemann        6       w    (t r th ph)      (1 1 1 1)

 10 object(s),    Total components: 173


 t

Time: 83 ms

