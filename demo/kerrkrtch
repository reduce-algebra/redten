comment
This Reduce script evaluates the Kretchmann scalar for the Kerr metric.

Below is the line-element for the metric. The functions  delta(r)
and  rho2(r,th) will remain unevaluated until the Ricci tensor is
computed, however, the derivatives of  these  functions  will  be
evaluated. 
;
ds := - delta/rho2*(d(t)-a*sin(th)^2*d(ph))^2
   + sin(th)^2/rho2*((r^2+a^2)*d(ph)-a * d(t))^2
   + rho2/delta * d(r)^2+rho2*d(th)^2;
comment
Define the  general  functions  delta(r),  rho2(r,th)  and  their
derivatives.
;
depend delta,r;
depend rho2,r,th;
let df(rho2,r) = 2*r;
let df(delta,r) = 2*r-2*m;
let df(rho2,th) = -2*a^2*sin(th)*cos(th);
comment
The let rule below is vitally important.  It allows considerable
simplification of expressions and prevents intermediate expression
swell.  Without this rule, this demo take more than twice as long to
run.
;
let r^2=sin(th)^2*a^2-a^2+rho2;
let df(r,th)=0;
stime();
on showindices;
comment
Compute the metric tensor from the line-element, and simplify the 
inverse metric. 
;
metric (ds);
mapfi(g!_inv);
comment
Compute the first  and  second  Christoffel  symbols.  The  first
Christoffel  symbols  are  symmetric  in  their  first and second
indices, the second Christoffel symbols are  symmetric  in  their
second and third indices, and have a contravariant first index. 
;
christoffel2();
comment
Compute the fully covariant Riemann curvature tensor. This object 
has the full Riemann symmetry. 
;
riemann();
comment
Compute the fully raised Riemann tensor and the Kretchsmann scalar in one
statement.
;
kr==ri[a,b,c,d]*ri[@a,@b,@c,@d];
comment
Enable factoring and clear some definitions.
;
on factor,gcd;
forall x clear cos(x)^2;
forall x let sin(x)^2=1-cos(x)^2;
clear r^2;
let delta = r^2 - 2*m*r + a^2;
let rho2 = r^2 + a^2 * cos (th)^2;
kr:=kr;
clear delta,rho2;
comment
A final substitution to get the result in a simple form
;
let cos(th)*a=sqrt(rho2-r^2);
kr:=kr$
off factor;
kr;
etime();
;end;
