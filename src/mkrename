#!/bin/sh
FILES="algebra.red cmplx.red decl.red dif.red frme.red\
	 gr.red igen.red indexed.red io.red math.red matrix.red np.red \
	save.red shift.red spnr.red sym.red symindex.red sys.env utility1.red\
	utility2.red noname"

cat > noname << EOF
!*dfprint !*allerr !*backtrace !*evalindex !*extendedsum !*factor
!*fancydf !*fort !*hide !*int !*list !*mkobjsafe !*nat !*nero
!*paging !*peek !*promptenv !*reversedir !*rewrite !*showindices
!*symzexp !*symzflg !*usermode !*xeval backvalue addtoenv altmetric
christoffel1 christoffel2 cleartmp cmod cofactor coords complex
copyfam cnj cov d dalembert defindextype delenv delta describe det
determ dir div einstein fn freinstein frmetric frricci frriccisc
frriemann frweyl gamma generics geodesic getcon getfam getmetric help
ias iclear icopy im indexed invert info killing lie mapfi mclear
metric mkcoords mktnsr mkobj multiplier newenv nocomplex nodir
npmetric npnames npspin npd npdel npdel npdelc npweyl npricci
nulltetrad odf pdf protect rat re rem remi restorenv restoreobj
restrict ricci riccisc riemann savec savei savenv setcon setmetric
seval shift spchristoffel spinmat spmetric subobj symz swapenv tenmetric
trace weyl stime etime keep dot rename renamed
operator posn!* orig!* program!* promptexp promptstring!* scan setk1
title ycoord!* ymax!* ymin!* fluid global
EOF

date=`date`
cat > rename.red << EOF
%This file automatically generated by $0 on $date
symbolic$

putd ('oldtoken, car getd ('token), cdr getd ('token))$
remflag ('(token), 'lose)$

symbolic procedure token();
begin scalar tok, ntok;
  tok := oldtoken ();
  if (ntok := get (tok, 'newtokname)) then return ntok
  else return tok;
end$

EOF

awk 'FILENAME=="noname" {\
	for (i = 1; i <= NF; i++) rename[$i] = -1;\
}\
/symbolic procedure/{if (!rename[$3]) rename[$3]=1}\
/symbolic macro procedure/{if (!rename[$4]) rename[$4]=1}\
/smacro procedure/{if (!rename[$3]) rename[$3]=1}\
/^[a-z0-9!]/&&$2==":="{if (!rename[$1]) rename[$1]=1}\
FILENAME~/decl/ && ($1=="fluid" || $1=="global") {c=1}\
FILENAME~/decl/ && $1==")$" {c=0}\
FILENAME~/decl/ && c == 1 {\
	if ($1~/%/) {if (!rename[$2]) rename[$2]=1}\
        else {if (!rename[$1]) rename[$1]=1}\
}\
END  {\
	for (name in rename) \
	{\
	  if (rename[name] == 1) {\
              printf ("put ('\''%s,\t'\''newtokname,\t'\''r10!-%s)$\n", name, name)}\
	}\
}' $FILES | sort >> rename.red

rm -f noname
